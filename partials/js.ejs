<script src="vendor/jquery/dist/jquery.min.js"></script>
<script src="vendor/swiper/dist/js/swiper.jquery.js"></script>
<script src="https://unpkg.com/vue/dist/vue.js"></script>
<script src="vendor/threee/three.min.js"></script>
<script src="vendor/threee/ColladaLoader.js"></script>
<script src="vendor/threee/ColladaLoader2.js"></script>
<script src="vendor/letter_textillate/jquery.lettering.js"></script>
<script src="vendor/letter_textillate/jquery.textillate.js"></script>
<script src="vendor/velocity/velocity.min.js"></script>
<script src="vendor/velocity/velocity.ui.min.js"></script>
<script src="vendor/blast/jquery.blast.js"></script>
<script src="vendor/howler/howler.js"></script>
<script src='js/vue_component.js'></script>
<script src='js/threed.js'></script>
<script src="js/topbar.js"></script>
<script src="js/srcloader.js"></script>
<script>
    var video; // previous html5
    var videoOption = { id : "video_player", controls : false, 
                        autoplay : true, muted : true,
                        playsinline : true};
    var sound, soundId;
    var curSlideElement;
    function textAnimation(el) {
        el.blast({delimiter : 'word'})
          .velocity('transition.fadeIn', {
                display : null,
                duration : 1000,
                stagger : 100,
                delay : 400,
                begin : function() {
                    el.css('opacity', 1);
                }
          });
    }
    var mySwiper = new Swiper('.swiper-container', {
        direction : 'vertical',
        pagination: '.swiper-pagination',
        paginationType : 'progress',
        simulateTouch : false,
        onSlideChangeEnd : function() {
            // callback function that slide change end
            //  2. text preload
            curSlideElement = app.$children[mySwiper.activeIndex];
            //  1. has video
            if (app && curSlideElement.properties.hasVideo) {
                
                // find video-container inside this component
                var el = $(curSlideElement.$el);
                var vc = el.find(".video_container");
                var vspin = el.find(".v-spin");
                video = el.find(".video_container video");
                video.on('loadeddata', function(){
                    this.play();
                    vspin.css("display", "none");
                    // video가 있으면 sound도 있으니깐 이건 필요 없을 듯
                    if (!sound) {
                        sound = new Howl({
                            src : curSlideElement.properties.soundSrc
                        });
                        soundId = sound.play();
                    }
                    if (app.muted) sound.mute(true);
                    else sound.mute(false);
                });
            }
            if (curSlideElement.properties.main_text) {
                var el = $(curSlideElement.$el);
                var inn = el.find('.inner');
                textAnimation(inn);
            }
        },
        onSlideChangeStart : function() {
            checktopbar(); // topbar style
            if (video && !video.paused) {
                if (video[0]) {
                    video[0].pause();
                    video[0].currentTime = 0;
                }
            }
            if (sound) { 
                sound.unload(); 
            }
        },
        preloadImages: false,
        // Enable lazy loading
        lazyLoading: true
    });
    mySwiper.disableTouchControl();
    var galleryTop = new Swiper('.swiper-container-h', {
        direction : 'horizontal'  ,
        paginationClickable : true,
        nextButton : '.swiper-button-next',
        prevButton : '.swiper-button-prev',
        preloadImages : false,
        lazyLoading : true
    });
    $(".gallery-thumb").on('click', '.thumb', function(){
        galleryTop.slideTo($(this).index(), 500);
    });

</script>
<script>
</script>
<script>
    var bgm = new Howl({
        src : ['sound/bgm.mp3']  ,
        loop : true,
        autoplay : true,
        volume : 0.5
    });
    var toggleSound = new Howl({
        src : ['sound/soundon.wav']  
    });
    $('.speaker-button').on('click', function(){
        if (app.muted) toggleSound.play();
        app.muted = !app.muted;
        app.muted ? bgm.mute(true) : bgm.mute(false);
        if (sound) {
            if (app.muted) sound.mute(true);
            else sound.mute(false);
        }
            
    });
    
</script>
<script src="js/prepareyourheadphone.js"></script>
<script src="js/redirect.js"></script>
